version: '3'

services:

  auth-client:
    container_name: auth-client
    image: trg_app/auth-client:0.0.0.RELEASE
    build:
      context: .
      dockerfile: ./apps/auth-client/Dockerfile
    ports:
      - 3000:3000
    env_file:
      - ./apps/auth-client/.env.production
      - ./.env.production
    networks:
      - trg_prod_network

  auth-server:
    container_name: auth-server
    image: trg_app/auth-server:0.0.0.RELEASE
    build:
      context: .
      dockerfile: ./apps/auth-server/Dockerfile
    depends_on:
      - trg_prod_pg
    ports:
      - 4000:4000
    env_file:
      - ./apps/auth-server/.env.production
      - ./.env.production
    networks:
      - trg_prod_network

  dashboard-client:
    container_name: dashboard-client
    image: trg_app/dashboard-client:0.0.0.RELEASE
    build:
      context: .
      dockerfile: ./apps/dashboard-client/Dockerfile
    ports:
      - 3001:3001
    env_file:
      - ./apps/dashboard-client/.env.production
      - ./.env.production
    networks:
      - trg_prod_network
      
  dashboard-server:
    container_name: dashboard-server
    image: trg_app/dashboard-server:0.0.0.RELEASE
    build:
      context: .
      dockerfile: ./apps/dashboard-server/Dockerfile
    depends_on:
      - trg_prod_pg
    ports:
      - 4001:4001
    env_file:
      - ./apps/dashboard-server/.env.production
      - ./.env.production
    networks:
      - trg_prod_network
  
  trg_prod_pg:
    image: postgres
    container_name: trg_prod_pg
    ports:
      - "5432:5432"
    restart: always
    shm_size: 128mb
    volumes:
      - trg_prod_data:/var/lib/postgresql/data
    env_file:
      - ./.env.postgres
    networks:
      - trg_prod_network

  caddy:
    image: caddy:latest
    container_name: caddy
    networks:
      - trg_prod_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.production:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped

networks:
  trg_prod_network:
    driver: bridge

volumes:
  trg_prod_data:
  caddy_data:
  caddy_config:
